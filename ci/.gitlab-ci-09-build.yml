build-dac:
  stage: build
  tags: [macos-arm64]
  variables:
    qtpath: /Users/gitlab/Qt/6.5.1/macos/bin
  script:
    - printf "GAMS_DISTRIB=$HOME/cache/gams-installs/`python3 ci/fetch_gams.py version $PF_CUSTOM_BRANCH`\n" > gamsinclude.pri
    - printf "GAMS_DISTRIB_C_API=\$\$GAMS_DISTRIB/apifiles/C/api\n" >> gamsinclude.pri
    - printf "GAMS_DISTRIB_CPP_API=\$\$GAMS_DISTRIB/apifiles/C++/api\n" >> gamsinclude.pri
    - mkdir build && cd build
    - GAMS_CORE_PATH="${GAMS_FOR_MACOS}"
    - PATH="${qtpath}:${GAMS_FOR_MACOS}:${PATH}"
    - qmake ../gams-mii.pro CONFIG+=release && make -j4
  needs: [fetch-prerequisites,install-gams-dac]
  artifacts:
    name: mii-dac
    expire_in: 2 hours
    paths: [build]

build-deg:
  stage: build
  tags: [macos]
  variables:
    qtpath: /Users/gitlab/Qt/6.5.1/macos/bin
  script:
    - printf "GAMS_DISTRIB=$HOME/cache/gams-installs/`python3 ci/fetch_gams.py version $PF_CUSTOM_BRANCH`\n" > gamsinclude.pri
    - printf "GAMS_DISTRIB_C_API=\$\$GAMS_DISTRIB/apifiles/C/api\n" >> gamsinclude.pri
    - printf "GAMS_DISTRIB_CPP_API=\$\$GAMS_DISTRIB/apifiles/C++/api\n" >> gamsinclude.pri
    - mkdir build && cd build
    - GAMS_CORE_PATH="${GAMS_FOR_MACOS}"
    - PATH="${qtpath}:${GAMS_FOR_MACOS}:${PATH}"
    - qmake ../gams-mii.pro CONFIG+=release && make -j4
  needs: [fetch-prerequisites,install-gams-deg]
  artifacts:
    name: mii-deg
    expire_in: 2 hours
    paths: [build]

build-leg:
  stage: build
  tags: [linux]
  image:
    name: $GAMS_CONTAINER_REGISTRY/qt-machines/leg/builder-qt6.5:latest
    entrypoint: [""]   # prevent startup.sh
  needs: [fetch-prerequisites,install-gams-leg]
  variables:
    DOLLAR_GAMS: $$$$GAMS_DISTRIB
  script:
    - echo "GAMS_DISTRIB=/cache/gams-installs/`python3 ci/fetch_gams.py version $PF_CUSTOM_BRANCH`" > gamsinclude.pri
    - echo "GAMS_DISTRIB_C_API=$DOLLAR_GAMS/apifiles/C/api" >> gamsinclude.pri
    - echo "GAMS_DISTRIB_CPP_API=$DOLLAR_GAMS/apifiles/C++/api" >> gamsinclude.pri
    - mkdir build && cd build
    - qmake ../gams-mii.pro CONFIG+=release && make -j4
  artifacts:
    name: mii-leg
    expire_in: 2 hours
    paths: [build]

build-wei:
  stage: build
  tags: [windows]
  needs: [install-gams-wei]
  variables:
     cmd_vcvars: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat
  image:
    name: $GAMS_CONTAINER_REGISTRY/qt-machines/wei/builder-qt6.5:latest
  script:
    - '& $cmd_vcvars'
    - $data = 
      "GAMS_DISTRIB=C:/Cache/gams-installs/$(Get-Content mygmsdir.tmp -Raw)",
      'GAMS_DISTRIB_C_API=$$GAMS_DISTRIB/apifiles/C/api',
      'GAMS_DISTRIB_CPP_API=$$GAMS_DISTRIB/apifiles/C++/api'
    - $data | out-file -encoding ascii gamsinclude.pri
    - mkdir build
    - cd build
    - qmake ..\gams-mii.pro "CONFIG+=release"
    - nmake
  artifacts:
    name: mii-wei
    expire_in: 2 hours
    paths: [build]
